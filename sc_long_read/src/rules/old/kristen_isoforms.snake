"""
1. Scilore
2. Salmon 
    * First try to make a fastq file per cell, maybe try to include the UMI in the read name and gene?
    * Map with minimap2
    * Count with salmon
3. My own
    * Use fastq and minimap output above
    * parse bam file, create a dictionary with read name as key and list of transcripts
        * Maybe check gene name by also having a gene to transcript dictionary
    * Write a file that outputs all reads and the every transcript they mapped to
    * Go through dictionary, create a list. If there is only 1 transcript, name by the transcript + gene, otherwise name the multiplets by gene_name_undef, then use a counter.
    * Write the results of the counter to an output file
"""

def _get_minimap_output(wildcards):
    checkpoint_output = checkpoints.split_files.get(**wildcards).output[0]
    print(wildcards)
    print(checkpoint_output)
    return expand("{results}/minimap2_transcriptome/{sample}/{id}.sorted.bam",
       sample=wildcards.sample,
       results = wildcards.results,
       id=glob_wildcards(os.path.join(checkpoint_output, "{id}." + wildcards.sample + "_split.fastq.gz")).id)


rule make_fastq:
    input:
        bam_file = "{results}/tenx_barcode/{sample}/{id}.GEUS10xAttributes.sorted_umifound_.bam"
    output:
        "{results}/cell_fastqs/{sample}/{id}_fastq.fastq.gz",
    params:
        job_name  = "{sample}_cell_fastqs",
        memory    = "select[mem>50] rusage[mem=50]",
    threads:
        1
    log:
        "{results}/logs/cell_fastqs/{sample}_{id}"
    script:
        "../scripts/make_fastq.py"


rule combine_files:
    input:
        bam_files = _get_minimap_output,
        gtf       = GENOME + "/genes/genes.gtf"
    output:
        "{results}/kristen_matrix/{sample}_counts.txt"
    params:
        job_name = "{sample}_finish",
        memory   = "select[mem>60] rusage[mem=60]"
    threads:
        1
    log:
        "{results}/logs/kristen_matrix/{sample}_done"
    script:
        "../scripts/count_reads.py"

# Make transcriptome fa from gtf
# module load rsem/1.3.3

# gtf_file=/beevol/home/rbilab/ref/cellranger/mouse/refdata-gex-mm10-2020-A/genes/genes.gtf
# fasta_file=/beevol/home/rbilab/ref/cellranger/mouse/refdata-gex-mm10-2020-A/fasta/genome.fa
# output_dir=./salmon_ref/cellranger_mm10

# rsem-prepare-reference --gtf $gtf_file $fasta_file $output_dir

# make minimap index
# minimap2 -x splice -d \
#     {output[0]} \
#     {fa_ref}

# Run minimap2
# minimap2 \
#   -t 8 \
#   -ax map-ont \
#   -p 1.0 \
#   -N 100 \
#   $mmi_index \
#   $test_fq | \
#   samtools view -Sb > $out_bam